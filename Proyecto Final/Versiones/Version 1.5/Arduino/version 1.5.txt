#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <Servo.h>

int estado = 0;                  // 0=cerrado 1=abierto
Servo servo11;                   // Crea el objeto servo11 con las características de Servo
const byte FILAS = 4;            // define el número de filas
const byte COLUMNAS = 4;         // define el número de columnas
char keys[FILAS][COLUMNAS] = {    // define la distribución de teclas
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte pinesFilas[FILAS] = {9, 8, 7, 6};         // pines correspondientes a las filas
byte pinesColumnas[COLUMNAS] = {5, 4, 3, 2};  // pines correspondientes a las columnas
Keypad teclado = Keypad(makeKeymap(keys), pinesFilas, pinesColumnas, FILAS, COLUMNAS);  // crea objeto teclado
char TECLA;                        // almacena la tecla presionada
char CLAVE[5];                     // almacena en un array 4 dígitos ingresados
char CLAVE_MAESTRA[5] = "0000";    // almacena en un array la contraseña inicial
byte INDICE = 0;                   // índice del array
LiquidCrystal_I2C lcd(0x27, 16, 2);  // dependiendo del fabricante del I2C, el código 0x27 puede cambiar a 0x3F, 0x20, 0x38

const int LED_VERDE = 13; // Definir el pin del LED verde
const int LED_ROJO = 12;  // Definir el pin del LED rojo
const int LED_TECLA = A2; // Definir el pin del LED para la tecla
const int SPEAKER_PIN = A0; // Definir el pin del parlante
void setup() {
  lcd.init();                          // inicializa el LCD
  lcd.backlight();
  servo11.attach(11, 660, 1400);        // Asocia el servo1 al pin 11, define el min y max del ancho del pulso
  servo11.write(150);                // Gira el servo a 150 grados Cierra la puerta
  limpia();
  pinMode(LED_VERDE, OUTPUT); // Configurar el pin del LED verde como salida
  digitalWrite(LED_VERDE, LOW); // Apagar el LED verde al inicio
  pinMode(LED_ROJO, OUTPUT); // Configurar el pin del LED rojo como salida
  digitalWrite(LED_ROJO, LOW); // Apagar el LED rojo al inicio
  pinMode(LED_TECLA, OUTPUT); // Configurar el pin del LED de la tecla como salida
  digitalWrite(LED_TECLA, LOW); // Apagar el LED de la tecla al inicio
  pinMode(SPEAKER_PIN, OUTPUT); // Configurar el pin del parlante como salida
}

void loop() {
  TECLA = teclado.getKey();   // obtiene tecla presionada y asigna a variable
  if (TECLA)                  // comprueba que se haya presionado una tecla
  {
    digitalWrite(LED_TECLA, HIGH); // Encender el LED de la tecla
    tone(SPEAKER_PIN, 1000, 100); // Tono para la tecla presionada
    delay(100); // Retraso para visualizar el encendido del LED
    digitalWrite(LED_TECLA, LOW);  // Apagar el LED de la tecla
    CLAVE[INDICE] = TECLA;    // almacena en array la tecla presionada
    INDICE++;                 // incrementa índice en uno
    lcd.print(TECLA);         // envía al LCD la tecla presionada
  }

  if (INDICE == 4)             // si ya se almacenaron los 4 dígitos
  {
    if (!strcmp(CLAVE, CLAVE_MAESTRA))    // compara clave ingresada con clave maestra
      abierto();
    else
      error();

    INDICE = 0;
  }
  if (estado == 1 && (analogRead(A3) == 0))     // si está abierta y se pulsa el botón de Nueva Clave
    nueva_clave();
}

void error() {
  lcd.setCursor(0, 1);
  lcd.print("ERROR DE CLAVE    ");
  tone(SPEAKER_PIN, 1500, 300); // Tono para clave incorrecta
  limpia();
}

void abierto() {
  if (estado == 0) {
    estado = 1;
    digitalWrite(LED_VERDE, HIGH); // Encender el LED verde
    digitalWrite(LED_ROJO, LOW);   // Apagar el LED rojo
    lcd.setCursor(0, 1);
    lcd.print("Abierto            ");  // imprime en el LCD que está abierta
    servo11.write(30);                 // Gira el servo a 30 grados  abre la puerta
    tone(SPEAKER_PIN, 2000, 200); // Tono para abrir
  } else {
    estado = 0;
    digitalWrite(LED_VERDE, LOW); // Apagar el LED verde
    digitalWrite(LED_ROJO, HIGH); // Encender el LED rojo
    lcd.setCursor(0, 1);
    lcd.print("Cerrado              ");  // imprime en el LCD que está cerrada
    servo11.write(150);                // Gira el servo a 150 grados  cierra la puerta
    tone(SPEAKER_PIN, 1000, 200); // Tono para cerrar
  }
  limpia();
}

void nueva_clave() {
  lcd.setCursor(0, 0);
  lcd.print("NUEVA CLAVE:        ");
  lcd.setCursor(12, 0);
  INDICE = 0;
  while (INDICE <= 3) {
    TECLA = teclado.getKey();   // obtiene tecla presionada y asigna a variable TECLA
    if (TECLA)                 // comprueba que se haya presionado una tecla
    {
      CLAVE_MAESTRA[INDICE] = TECLA;    // almacena en array la tecla presionada
      CLAVE[INDICE] = TECLA;
      INDICE++;                 // incrementa índice en uno
      lcd.print(TECLA);         // envía a monitor serial la tecla presionada
    }
  }
  estado = 0;
  lcd.setCursor(0, 1);
  lcd.print("CLAVE CAMBIADA");
  tone(SPEAKER_PIN, 2500, 300); // Tono para clave cambiada
  delay(2000);
  limpia();
}

void limpia() {
  lcd.setCursor(0, 0);
  lcd.print("CLAVE :          ");
  lcd.setCursor(9, 0);
}
